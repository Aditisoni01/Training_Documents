				
				
			Kubernetes :::::
			
				Is the open-source container Orchestration Tool.
				This is used to orchestrate any type of containers.
				Create Replicas 
				Scale Up / Scale Down
				This is to ensure high availability
				used to perform auto-scaling, load-balancing, Deployments.
				
				
			Application Development 
				
			Application Build 			--> Process to compiling the source code & create artifacts ( using Maven) *.war
			
			Application Deployment 		--> Process of copying the artifacts from one server to another 
			
		
		If the applications are containerized,
		
		Deploy the application image .
		
		
		Kubernetes :::
			
			Kubernetes Architecture
			Kubernetes Objects 
			Kubernetes Terminologies
			Kubernetes Installation & Configuration
			Kubernetes Deployments 
			Kubernetes Services 
			
		Managed Services ::
		
			GCP 		GKS
			AWS 		EKS
			AZURE 		AKS
			
		Kubernetes :::
			
			Kubernetes Architecture		 ::
			
				Kubernetes Master(Control Plane)
						Kubernetes_WorkerNode1
						Kubernetes_WorkerNode2
						Kubernetes_WorkerNode3
						Kubernetes_WorkerNode4
						Kubernetes_WorkerNode5						
		
		Non-Prod Environment											Production Environment
		
			Non-Prod Kubernetes Master(Control Plane)						Prod Kubernetes Master(Control Plane)
					Kubernetes_WorkerNode1										Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2										Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3										Kubernetes_WorkerNode3
	
		
		Deployment & Services 
		
			Kubernetes_Cluster				==> Collection of WorkNodes 
				Kubernetes_WorkerNode1
			    Kubernetes_WorkerNode2
			    Kubernetes_WorkerNode3
				
			Kubernetes_Master 
					Kubernetes_Cluster1		
				    	Kubernetes_WorkerNode1
                        Kubernetes_WorkerNode2
                        Kubernetes_WorkerNode3
					Kubernetes_Cluster1		
				    	Kubernetes_WorkerNode1
                        Kubernetes_WorkerNode2
                        Kubernetes_WorkerNode3
						
		Kubernetes Terminologies :::
		
			Image 
			Container 
			Pods 			--> It is a smallest unit of schedule
			Cluster 		--> Collection of WorkNodes 
			Master 			--> Is a Control Plane - used to manage the overall kubernetes clusters
			Worker_Nodes 	--> These a VMs in the cluster
			
			
			The Containers are referred as Pods in Kubernetes.
			
				A Pod can have one more two containers
				
		Install Kubernetes ::::
		
			--> Minikube 
					--> Light-weight edition					
			--> Kubeadm 
					--> Command Line Utility --> setup the Kubernetes Master & Worker_Nodes
					
				Kubernetes Master(Control Plane)
					Kubernetes Master1(Control Plane)
						Kubernetes_Cluster1		
							Kubernetes_WorkerNode1
							Kubernetes_WorkerNode2
							Kubernetes_WorkerNode3
						Kubernetes_Cluster2		
							Kubernetes_WorkerNode1
							Kubernetes_WorkerNode2
							Kubernetes_WorkerNode3
					Kubernetes Master2(Control Plane)
						Kubernetes_Cluster3		
							Kubernetes_WorkerNode1
							Kubernetes_WorkerNode2
							Kubernetes_WorkerNode3
						Kubernetes_Cluster4		
							Kubernetes_WorkerNode1
							Kubernetes_WorkerNode2
							Kubernetes_WorkerNode3			
			
			
			appln. version v1.1 ==> 
			appln. version v2.1 ==> 
			
			
			Demo :::
			
				Kubernetes Master(Control Plane)
						Kubernetes_WorkerNode1
						Kubernetes_WorkerNode2
						Kubernetes_WorkerNode3
						
				Integrate these build and deployments using Jenkins.
				
			Kubectl ==> KubeControl -- Used to interact with Kubernetes Master and manage the kubernetes objects.
			
			Kubernetes Objects ::
			
				pod 
				deployment
				service 
				namespace 				
			
			Syntax for Kubectl ::::
			
			To Create a pod or any kubernetes objects :::
			
				Manifest file ---> 	the config file the describes the kubernetes objects properties. 
									written using *.yaml / *.json file format.
									
				Adhoc_Commands
					
			Eg>: 
			
				kubectl create -f <manifest_filename>
				
				kubectl get pods 
				
				
		Pod :::
		
			What is Pod ?
			How the pods are create ?
			Pod Networking?
			
		Unique ip address will be assign to any pod when it gets created. 
		
		Pod Life Cycle ::::
		
